// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using OllamaFarmer.Server.Data;

#nullable disable

namespace OllamaFarmer.Server.Migrations
{
    [DbContext(typeof(AppDbContext))]
    [Migration("20250820024038_AddConsultantName")]
    partial class AddConsultantName
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "9.0.8")
                .HasAnnotation("Relational:MaxIdentifierLength", 64);

            MySqlModelBuilderExtensions.AutoIncrementColumns(modelBuilder);

            modelBuilder.Entity("OllamaFarmer.Server.Data.Entities.AppChatEntity", b =>
                {
                    b.Property<Guid>("Id")
                        .HasColumnType("char(36)");

                    b.Property<Guid>("ChatServerId")
                        .HasColumnType("char(36)");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("Model")
                        .HasColumnType("longtext");

                    b.Property<string>("ModelCapabilities")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("Name")
                        .HasColumnType("longtext");

                    b.Property<string>("Options")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<bool>("Persist")
                        .HasColumnType("tinyint(1)");

                    b.Property<DateTime>("UpdatedAt")
                        .HasColumnType("datetime(6)");

                    b.HasKey("Id");

                    b.ToTable("AppChats");
                });

            modelBuilder.Entity("OllamaFarmer.Server.Data.Entities.AppMessageEntity", b =>
                {
                    b.Property<Guid>("Id")
                        .HasColumnType("char(36)");

                    b.Property<Guid>("ApiChatMessage")
                        .HasColumnType("char(36)");

                    b.Property<Guid?>("AppChatEntityId")
                        .HasColumnType("char(36)");

                    b.Property<string>("Content")
                        .HasColumnType("longtext");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("ImageUrls")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("Images")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<int>("Index")
                        .HasColumnType("int");

                    b.Property<bool>("IsCompleted")
                        .HasColumnType("tinyint(1)");

                    b.Property<bool>("IsCompletedFunctionCall")
                        .HasColumnType("tinyint(1)");

                    b.Property<bool>("IsCompletedToolResult")
                        .HasColumnType("tinyint(1)");

                    b.Property<Guid>("OllamaApiChatMessage")
                        .HasColumnType("char(36)");

                    b.Property<string>("Role")
                        .HasColumnType("longtext");

                    b.Property<DateTime>("Timestamp")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("ToolCallArgs")
                        .HasColumnType("longtext");

                    b.Property<string>("ToolCallId")
                        .HasColumnType("longtext");

                    b.Property<string>("ToolCallName")
                        .HasColumnType("longtext");

                    b.Property<string>("Tools")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.HasKey("Id");

                    b.HasIndex("AppChatEntityId");

                    b.ToTable("AppChatMessages");
                });

            modelBuilder.Entity("OllamaFarmer.Server.Data.Entities.ChatModel", b =>
                {
                    b.Property<Guid>("Id")
                        .HasColumnType("char(36)");

                    b.Property<string>("Capabilities")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<Guid>("ChatServerId")
                        .HasColumnType("char(36)");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("Description")
                        .HasColumnType("longtext");

                    b.Property<bool>("EnableThinking")
                        .HasColumnType("tinyint(1)");

                    b.Property<string>("Family")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("ImageUrl")
                        .HasColumnType("longtext");

                    b.Property<bool>("IsChatModel")
                        .HasColumnType("tinyint(1)");

                    b.Property<bool>("IsLLMModel")
                        .HasColumnType("tinyint(1)");

                    b.Property<bool>("IsLocal")
                        .HasColumnType("tinyint(1)");

                    b.Property<bool>("IsRemote")
                        .HasColumnType("tinyint(1)");

                    b.Property<bool?>("IsRunning")
                        .HasColumnType("tinyint(1)");

                    b.Property<string>("Model")
                        .HasColumnType("varchar(255)");

                    b.Property<string>("Name")
                        .HasColumnType("longtext");

                    b.Property<string>("ParameterSize")
                        .HasColumnType("longtext");

                    b.Property<string>("QuantizationLevel")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<long>("Size")
                        .HasColumnType("bigint");

                    b.Property<string>("Type")
                        .HasColumnType("longtext");

                    b.Property<string>("Url")
                        .HasColumnType("longtext");

                    b.Property<long>("Vram")
                        .HasColumnType("bigint");

                    b.HasKey("Id");

                    b.HasIndex("ChatServerId");

                    b.HasIndex("Model")
                        .IsUnique();

                    b.ToTable("Models");
                });

            modelBuilder.Entity("OllamaFarmer.Server.Data.Entities.ChatModelTag", b =>
                {
                    b.Property<Guid>("Id")
                        .HasColumnType("char(36)");

                    b.Property<string>("Name")
                        .HasColumnType("longtext");

                    b.Property<string>("Value")
                        .HasColumnType("longtext");

                    b.HasKey("Id");

                    b.ToTable("Tags");
                });

            modelBuilder.Entity("OllamaFarmer.Server.Data.Entities.ChatModelTagLink", b =>
                {
                    b.Property<Guid>("Id")
                        .HasColumnType("char(36)");

                    b.Property<Guid>("ModelId")
                        .HasColumnType("char(36)");

                    b.Property<Guid>("TagId")
                        .HasColumnType("char(36)");

                    b.HasKey("Id");

                    b.HasIndex("ModelId");

                    b.HasIndex("TagId");

                    b.ToTable("ModelTagLinks");
                });

            modelBuilder.Entity("OllamaFarmer.Server.Data.Entities.ChatServer", b =>
                {
                    b.Property<Guid>("Id")
                        .HasColumnType("char(36)");

                    b.Property<DateTimeOffset>("CreatedAt")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("Description")
                        .HasColumnType("longtext");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(256)
                        .HasColumnType("varchar(256)");

                    b.Property<DateTimeOffset>("UpdatedAt")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("Uri")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("Version")
                        .HasColumnType("longtext");

                    b.HasKey("Id");

                    b.ToTable("ChatServers");
                });

            modelBuilder.Entity("OllamaFarmer.Server.Data.Entities.Consultant", b =>
                {
                    b.Property<Guid>("Id")
                        .HasColumnType("char(36)");

                    b.Property<Guid>("ChatModelId")
                        .HasColumnType("char(36)");

                    b.Property<Guid>("ChatServerId")
                        .HasColumnType("char(36)");

                    b.Property<string>("ConsultantId")
                        .IsRequired()
                        .HasMaxLength(64)
                        .HasColumnType("varchar(64)");

                    b.Property<DateTimeOffset>("CreatedAt")
                        .HasColumnType("datetime(6)");

                    b.Property<int>("ExpertiseLevel")
                        .HasColumnType("int");

                    b.Property<float>("FrequencyPenalty")
                        .HasColumnType("float");

                    b.Property<float>("PresencePenalty")
                        .HasColumnType("float");

                    b.Property<string>("SystemMessage")
                        .HasColumnType("longtext");

                    b.Property<float>("Temperature")
                        .HasColumnType("float");

                    b.Property<float>("TopP")
                        .HasColumnType("float");

                    b.Property<string>("Topic")
                        .IsRequired()
                        .HasMaxLength(128)
                        .HasColumnType("varchar(128)");

                    b.Property<DateTimeOffset>("UpdatedAt")
                        .HasColumnType("datetime(6)");

                    b.HasKey("Id");

                    b.HasIndex("ConsultantId")
                        .IsUnique();

                    b.ToTable("Consultants");
                });

            modelBuilder.Entity("OllamaFarmer.Server.Data.Entities.McpServer", b =>
                {
                    b.Property<Guid>("Id")
                        .HasColumnType("char(36)");

                    b.Property<DateTimeOffset>("CreatedAt")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("Description")
                        .HasColumnType("longtext");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(256)
                        .HasColumnType("varchar(256)");

                    b.Property<DateTimeOffset>("UpdatedAt")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("Uri")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("Version")
                        .HasColumnType("longtext");

                    b.HasKey("Id");

                    b.ToTable("McpServers");
                });

            modelBuilder.Entity("OllamaFarmer.Server.Data.Entities.McpTool", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("char(36)");

                    b.Property<DateTimeOffset>("CreatedAt")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("Description")
                        .HasColumnType("longtext");

                    b.Property<Guid>("McpServerId")
                        .HasColumnType("char(36)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<DateTimeOffset>("UpdatedAt")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("Version")
                        .HasColumnType("longtext");

                    b.HasKey("Id");

                    b.HasIndex("McpServerId");

                    b.ToTable("McpTools");
                });

            modelBuilder.Entity("OllamaFarmer.Server.Data.Entities.ToolBag", b =>
                {
                    b.Property<Guid>("Id")
                        .HasColumnType("char(36)");

                    b.Property<DateTimeOffset>("CreatedAt")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("Description")
                        .HasColumnType("longtext");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(256)
                        .HasColumnType("varchar(256)");

                    b.Property<DateTimeOffset>("UpdatedAt")
                        .HasColumnType("datetime(6)");

                    b.HasKey("Id");

                    b.ToTable("ToolBags");
                });

            modelBuilder.Entity("OllamaFarmer.Server.Data.Entities.ToolBagTool", b =>
                {
                    b.Property<Guid>("Id")
                        .HasColumnType("char(36)");

                    b.Property<DateTimeOffset>("CreatedAt")
                        .HasColumnType("datetime(6)");

                    b.Property<Guid>("McpToolId")
                        .HasColumnType("char(36)");

                    b.Property<Guid>("ToolBagId")
                        .HasColumnType("char(36)");

                    b.HasKey("Id");

                    b.HasIndex("ToolBagId", "McpToolId")
                        .IsUnique();

                    b.ToTable("ToolBagTools");
                });

            modelBuilder.Entity("OllamaFarmer.Server.Data.KvpState", b =>
                {
                    b.Property<string>("Key")
                        .HasMaxLength(256)
                        .HasColumnType("varchar(256)");

                    b.Property<DateTime>("CreatedAt")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime(6)");

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<DateTime>("CreatedAt"));

                    b.Property<Guid>("Id")
                        .HasColumnType("char(36)");

                    b.Property<DateTime>("UpdatedAt")
                        .ValueGeneratedOnAddOrUpdate()
                        .HasColumnType("datetime(6)");

                    MySqlPropertyBuilderExtensions.UseMySqlComputedColumn(b.Property<DateTime>("UpdatedAt"));

                    b.Property<string>("Value")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.HasKey("Key");

                    b.HasIndex("Key")
                        .IsUnique();

                    b.ToTable("States");
                });

            modelBuilder.Entity("OllamaFarmer.Server.Data.Entities.AppMessageEntity", b =>
                {
                    b.HasOne("OllamaFarmer.Server.Data.Entities.AppChatEntity", "AppChat")
                        .WithMany("Messages")
                        .HasForeignKey("AppChatEntityId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.Navigation("AppChat");
                });

            modelBuilder.Entity("OllamaFarmer.Server.Data.Entities.ChatModel", b =>
                {
                    b.HasOne("OllamaFarmer.Server.Data.Entities.ChatServer", null)
                        .WithMany("ChatModels")
                        .HasForeignKey("ChatServerId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("OllamaFarmer.Server.Data.Entities.ChatModelTagLink", b =>
                {
                    b.HasOne("OllamaFarmer.Server.Data.Entities.ChatModel", "Model")
                        .WithMany("TagsLinks")
                        .HasForeignKey("ModelId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("OllamaFarmer.Server.Data.Entities.ChatModelTag", "Tag")
                        .WithMany("TagsLinks")
                        .HasForeignKey("TagId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Model");

                    b.Navigation("Tag");
                });

            modelBuilder.Entity("OllamaFarmer.Server.Data.Entities.McpTool", b =>
                {
                    b.HasOne("OllamaFarmer.Server.Data.Entities.McpServer", null)
                        .WithMany("McpTools")
                        .HasForeignKey("McpServerId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("OllamaFarmer.Server.Data.Entities.ToolBagTool", b =>
                {
                    b.HasOne("OllamaFarmer.Server.Data.Entities.ToolBag", null)
                        .WithMany("Tools")
                        .HasForeignKey("ToolBagId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("OllamaFarmer.Server.Data.Entities.AppChatEntity", b =>
                {
                    b.Navigation("Messages");
                });

            modelBuilder.Entity("OllamaFarmer.Server.Data.Entities.ChatModel", b =>
                {
                    b.Navigation("TagsLinks");
                });

            modelBuilder.Entity("OllamaFarmer.Server.Data.Entities.ChatModelTag", b =>
                {
                    b.Navigation("TagsLinks");
                });

            modelBuilder.Entity("OllamaFarmer.Server.Data.Entities.ChatServer", b =>
                {
                    b.Navigation("ChatModels");
                });

            modelBuilder.Entity("OllamaFarmer.Server.Data.Entities.McpServer", b =>
                {
                    b.Navigation("McpTools");
                });

            modelBuilder.Entity("OllamaFarmer.Server.Data.Entities.ToolBag", b =>
                {
                    b.Navigation("Tools");
                });
#pragma warning restore 612, 618
        }
    }
}
